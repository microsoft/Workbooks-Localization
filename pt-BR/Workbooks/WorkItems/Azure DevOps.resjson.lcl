<?xml version="1.0" encoding="utf-8"?>
<LCX SchemaVersion="6.0" Name="S:\output\loc\WorkItems\Azure DevOps.resjson" PsrId="306" FileType="1" SrcCul="en-US" TgtCul="pt-BR" xmlns="http://schemas.microsoft.com/locstudio/2006/6/lcx">
  <OwnedComments>
    <Cmt Name="Dev" />
    <Cmt Name="LcxAdmin" />
    <Cmt Name="Rccx" />
  </OwnedComments>
  <Item ItemId=";String Table" ItemType="0" PsrId="306" Leaf="false">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
    <Item ItemId=";Strings" ItemType="0" PsrId="306" Leaf="false">
      <Disp Icon="Str" Disp="true" LocTbl="false" />
      <Item ItemId=";items.HiddenInfoPannel.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;- Required parameters for E2E details]D;]A;- Required parameters for Smart Detection]D;]A;- Optional parameters]D;]A;- Helper functions to keep code down]D;]A;- Direct queries to get the item information]D;]A;- Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters for E2E details]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Required parameters for Smart Detection]D;]A;]D;]A;`detectionId` - Required so we can identify the detection event.]D;]A;`detectionType` - Required detection type.]D;]A;`ruleName` - Required detection rule name.]D;]A;`detectionDuration` - Required to provide startDate with endDate.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;#### workItemTypes datatable ]D;]A;]D;]A;In order to give you the option to create a Bug for one type of telemetry and a task for another type we generate a data table that has a list of workItemTypes with a hard coded id of 1. We join with the hardcoded key so we can repeat the rows for each work item type and generate the correct URL with the correct parameters. You can see this in the query and it looks like this.]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Task', 1]5D;;]D;]A;```]D;]A;]D;]A;If you want to add another work item type or only have one you can modify the data table to reflect any built in or custom type.]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          <Tgt Cat="Text" Stat="Update" Orig="New">
            <Val><![CDATA[## Como usar este modelo]D;]A;]D;]A;Se você estiver vendo esta mensagem, isso significa que você está editando seu modelo para personalizá-lo ou depurá-lo. Navegue até a seção correta para começar. Observe que esse texto é compartilhado entre as versões Azure DevOps e GitHub do modelo, pois elas compartilham os mesmos recursos.]D;]A;]D;]A;### Personalizar o modelo]D;]A;]D;]A;Abaixo há duas consultas. A primeira consulta usa itemId e a transmite para a consulta do Log Analytics para obter o item específico. A segunda consulta usa o operation_Id e mostrará todas as telemetrias relacionadas.]D;]A;]D;]A;A estrutura geral da consulta é ]D;]A;```]D;]A;// Parâmetros necessários]D;]A;// Parâmetros opcionais]D;]A;// Funções auxiliares para manter o código enxuto]D;]A;// Consultas diretas para obter as informações do item]D;]A;// União de consultas diretas e criação de URL]D;]A;```]D;]A;]D;]A;### Informações sobre o Item de Trabalho ou a Criação de problemas]D;]A;Para o Azure DevOps há o documento ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/pt-br/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) que fornece alguns detalhes sobre como criar um item de trabalho com uma URL.]D;]A;]D;]A;Para o GitHub, há o documento ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) que explica os detalhes de criação de um problema.]D;]A;]D;]A;]D;]A;#### Parâmetros necessários]D;]A;]D;]A;`timestamp` – necessário para que possamos filtrar as consultas até a janela de 10 minutos correta. Isso é passado pela UX quando você seleciona o modelo. Gera os parâmetros `starttime` e `endtime` usados nas consultas]D;]A;`operationid` – necessário para que possamos criar a consulta de itens relacionados. Isso é passado pela UX quando você seleciona o modelo.]D;]A;`eventid` – necessário para que possamos criar a consulta de item específica. Isso é passado pela UX quando você seleciona o modelo.]D;]A;`eventlink` – o link adicionado ao item de trabalho para que você possa ver os detalhes da operação. Isso é passado pela UX quando você seleciona o modelo.]D;]A;`httpendpoint` – obrigatório para gerar a URL para criar o item de trabalho. Isso é passado pelo assistente de criação.]D;]A;]D;]A;#### Parâmetros opcionais]D;]A;]D;]A;`queryString` - permite adicionar mais campos ao criar um item de trabalho.]D;]A;]D;]A;####Funções auxiliares]D;]A;`returnundefined (name: string)` – admite uma cadeia de caracteres e retorna <undefined> se estiver vazia]D;]A;`returnline (key: string, value: string)` – retorna uma única linha com formato a ser adicionada aos detalhes do item de trabalho. Isso gerará um par chave/valor no qual a chave está em negrito.]D;]A;`urlPrefix (workItemType:string)` – gera a URL para criar a URL de criação do item de trabalho completo. Assume o tipo de item de trabalho para criar o ponto de extremidade correto. Para o DevOps, o tipo de workItem precisa ser um nome de item de trabalho válido – "bug", "task" etc.]D;]A;`description (witType:string, itemType:string)` – utilitário para identificar o tipo de item de trabalho e o tipo de telemetria, usado somente na saída da consulta.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` – isso gera o item de trabalho ou o título do problema e usa o seguinte: witType para o dizer no título, se é um Bug, Tarefa etc., itemType para ajudar a identificar se é uma solicitação, dependência etc. e o nome da operação para dar contexto sobre qual item específico precisa ser investigado]D;]A;`witDescription (bodyOfWit: string, itemType:string)` – isso gera o corpo do problema ou item de trabalho e usa o seguinte: bodyOfWit que é uma cadeia de caracteres de texto sem formatação, confira a consulta para obter exemplos. itemType, que é usado para alterar um nome de campo específico para itens de trabalho do AzureDevOps, confira a observação.]D;]A;`appendquerystring (fieldToAppend:string)` – simplesmente acrescenta um e comercial (&) na frente de um parâmetro de querystring.]D;]A;]D;]A;> **Observação sobre os tipos de Item de Trabalho do Bug** O Azure DevOps usa "Etapas de Reprodução" para o tipo de item de trabalho de Bug, portanto, se você alterar essa função, os detalhes do item de trabalho poderão não ser exibidos.]D;]A;]D;]A;> **Observação sobre hiperlinks** O Azure DevOps não permitirá injetar um hiperlink clicável em um item de trabalho. A melhor forma possível é fornecer a URL.]D;]A;]D;]A;#### Consultas diretas]D;]A;]D;]A;Essas têm o seguinte formato:]D;]A;]D;]A;`<<anyname>>` – um nome arbitrário para a consulta união]D;]A;`<<telemetrytable>>` – solicitações, rastreamentos etc.]D;]A;`bodyOfWit` – a cadeia de caracteres que você deseja adicionar ao item de trabalho ou problema.]D;]A;`nameForTitle` – usado para gerar o título correto para um tipo de telemetria específico. Por exemplo, avalabilityResults pode não ter um operation_Name definido.]D;]A;`workItemKey` – este é sempre 1 e é usado para gerar automaticamente a lista de tipos de item de trabalho corretos (se você desejar vários) para o Azure DevOps. Confira abaixo na seção de união.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Nome da Operação", operation_Name), returnline("Carimbo de data/hora", timestamp), returnline("Duração (ms)", duration), returnline("País ou região", client_CountryOrRegion), returnline("Estado ou província", client_StateOrProvince), returnline("Cidade", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;####Tabela de dados workItemTypes]D;]A;]D;]A;Para lhe dar a opção de criar um bug para um tipo de telemetria e uma tarefa para outro tipo, é gerada uma tabela de dados que tem uma lista de workItemTypes com uma ID embutida em código de valor 1. Unimos com a chave embutida para podermos repetir as linhas para cada tipo de item de trabalho e gerar a URL correta com os parâmetros corretos. Você pode ver isso na consulta, que tem a seguinte aparência.]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Tarefa', 1]5D;;]D;]A;```]D;]A;]D;]A;Se desejar adicionar outro tipo de item de trabalho ou só tiver um, você pode modificar a tabela de dados para refletir quaisquer tipos embutidos ou personalizados.]D;]A;]D;]A;#### União de consultas diretas]D;]A;]D;]A;Depois que as consultas diretas são definidas, elas são combinadas em uma consulta unificada para gerar a tabela correta. Para o Azure DevOps fazemos uma coisa especial aqui, juntamos uma consulta unida com uma datatable personalizada chamada workItemType. Isso simplesmente repete a linha para que possamos criar vários tipos de item de trabalho, se desejado.]D;]A;]D;]A;### Solução de problemas]D;]A;]D;]A;#### 404 Página não Encontrada]D;]A;]D;]A;Isso indica que o nome da organização está incorreto ou o projeto está incorreto. Verifique a URL inserida no assistente e tente novamente.]D;]A;]D;]A;#### 403 Não autorizado]D;]A;]D;]A;Isso significa que você não tem acesso à organização ou ao projeto. Valide se você tem a URL correta e, em caso afirmativo, entre em contato com o administrador para obter acesso.]D;]A;]D;]A;#### Os Dados do Item de Trabalho estão truncados]D;]A;]D;]A;Há dois motivos para isso e você só tem algumas opções para corrigi-los.]D;]A;]D;]A;**Comprimento dos Dados** – para a maioria dos servidores Web, há um tamanho máximo de URL. Se os dados forem muito longos ou se houver uma restrição de comprimento de URL, talvez você não veja o final dos dados]D;]A;**Codificação de URL** – por padrão, os valores que estão indo para a função `returnline` são codificados na URL. Mas se você alterar isso ou se você estiver fazendo algo personalizado, verifique se o uso de url_encode() corrige o problema]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;// Required parameters]D;]A;// Optional parameters]D;]A;// Helper functions to keep code down]D;]A;// Direct queries to get the item information]D;]A;// Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;#### workItemTypes datatable ]D;]A;]D;]A;In order to give you the option to create a Bug for one type of telemetry and a task for another type we generate a data table that has a list of workItemTypes with a hard coded id of 1. We join with the hardcoded key so we can repeat the rows for each work item type and generate the correct URL with the correct parameters. You can see this in the query and it looks like this.]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Task', 1]5D;;]D;]A;```]D;]A;]D;]A;If you want to add another work item type or only have one you can modify the data table to reflect any built in or custom type.]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.linkscreation.content.links.7aa6fc59a42640c2b25d0734201555ad.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create a task  for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.linkscreation.content.links.8fba3aab86974f2c9b650405c648af41.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create a bug for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.00f9cb584a754b75ab972fae4922c3de.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[usado para detecção inteligente]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.b5eddb9668e447ac9e1aa7f720cac03f.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[usado para detecção inteligente]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.d3aebff3d5c645969fb305c36869eab1.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[usado para detecção inteligente]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.f6598f4ceba14fa48d6abce8c756d469.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[usado para detecção inteligente]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.textdescription.content.json" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## Create an Azure Dev Ops Work Item]D;]A;---]D;]A;]D;]A;Click below links to create work items. If you want to customize this view, go to the Work Items menu and select the template that was created when you first set up the work item configuration.]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[## Criar um Item de Trabalho do Azure Dev Ops]D;]A;---]D;]A;]D;]A;Clique nos links abaixo para criar itens de trabalho. Se você quiser personalizar esta exibição, vá para o menu Itens de Trabalho e selecione o modelo que foi criado quando você definiu pela primeira vez a configuração do item de trabalho.]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[# Create an Azure Dev Ops Work Item]D;]A;---]D;]A;]D;]A;Using the table generated by the analytics query below we can create many types of work items. If you want to customize this view, go to the Work Items menu and select the workbook that was created when you first set up the work item configuration.]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.texteventTitle.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text" UsrLk="true">
          <Val><![CDATA[### Create Work Item for {eventName}]D;]A;]]></Val>
          <Prev Cat="Text">
            <Val><![CDATA[# Create Work Item for specific event]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
    </Item>
  </Item>
</LCX>