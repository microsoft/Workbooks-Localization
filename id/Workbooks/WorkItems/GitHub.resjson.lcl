<?xml version="1.0" encoding="utf-8"?>
<LCX SchemaVersion="6.0" Name="S:\output\loc\WorkItems\GitHub.resjson" PsrId="306" SrcCul="en-US" xmlns="http://schemas.microsoft.com/locstudio/2006/6/lcx" TgtCul="id-ID">
  <OwnedComments>
    <Cmt Name="Dev" />
    <Cmt Name="LcxAdmin" />
    <Cmt Name="Rccx" />
  </OwnedComments>
  <Item ItemId=";String Table" ItemType="0" PsrId="306" Leaf="false">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
    <Item ItemId=";Strings" ItemType="0" PsrId="306" Leaf="false">
      <Disp Icon="Str" Disp="true" LocTbl="false" />
      <Item ItemId=";items.HiddenInfoPannel.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;// Required parameters]D;]A;// Optional parameters]D;]A;// Helper functions to keep code down]D;]A;// Direct queries to get the item information]D;]A;// Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="Dev"><![CDATA[{Locked=["Define an ad hoc work item template using a hyperlink"]5D;,["About automation for issues and pull requests with query parameters"]5D;}]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";items.links9.content.links.bd27eb743c714af1b5f58155b4617a34.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create an issue for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="Dev"><![CDATA[{Locked={itemType}}]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";items.textdescription.content.json" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## Create a GitHub Work Item]D;]A;---]D;]A;]D;]A;Click below links to create work items. If you want to customize this view, go to the Work Items menu and select the template that was created when you first set up the work item configuration.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.texteventTitle.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[### Create Work Item for {eventName}]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="Dev"><![CDATA[{Locked={eventName}}]]></Cmt>
        </Cmts>
      </Item>
    </Item>
  </Item>
</LCX>