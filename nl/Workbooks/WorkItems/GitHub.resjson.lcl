<?xml version="1.0" encoding="utf-8"?>
<LCX SchemaVersion="6.0" Name="S:\output\loc\WorkItems\GitHub.resjson" PsrId="306" FileType="1" SrcCul="en-US" TgtCul="nl-NL" xmlns="http://schemas.microsoft.com/locstudio/2006/6/lcx">
  <OwnedComments>
    <Cmt Name="Dev" />
    <Cmt Name="LcxAdmin" />
    <Cmt Name="Rccx" />
  </OwnedComments>
  <Item ItemId=";String Table" ItemType="0" PsrId="306" Leaf="false">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
    <Item ItemId=";Strings" ItemType="0" PsrId="306" Leaf="false">
      <Disp Icon="Str" Disp="true" LocTbl="false" />
      <Item ItemId=";items.HiddenInfoPannel.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;- Required parameters for E2E details]D;]A;- Required parameters for Smart Detection]D;]A;- Optional parameters]D;]A;- Helper functions to keep code down]D;]A;- Direct queries to get the item information]D;]A;- Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters for E2E details]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Required parameters for Smart Detection]D;]A;]D;]A;`detectionId` - Required so we can identify the detection event.]D;]A;`detectionType` - Required detection type.]D;]A;`ruleName` - Required detection rule name.]D;]A;`detectionDuration` - Required to provide startDate with endDate.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[## Zo gebruikt u deze sjabloon]D;]A;]D;]A;Als u dit bericht ziet, bent u uw sjabloon aan het bewerken om het aan te passen of om fouten op te lossen. Ga naar de juiste sectie om aan de slag te gaan. Let op: deze tekst wordt gedeeld in zowel de Azure DevOps- als GitHub-versies van de sjabloon omdat ze dezelfde functies delen.]D;]A;]D;]A;### De sjabloon aanpassen]D;]A;]D;]A;Hieronder ziet u twee query's. Voor de eerste query wordt de item-id gebruikt en doorgegeven aan de Log Analytics-query om het specifieke item op te halen. Voor de tweede query wordt de operation_Id gebruikt om ALLE gerelateerde telemetrie weer te geven.]D;]A;]D;]A;De algemene structuur van de query is ]D;]A;```]D;]A;- Vereiste parameters voor E2E-details]D;]A;- Vereiste parameters voor slimme detectie]D;]A;- Optionele parameters]D;]A;- Helpfuncties om de hoeveelheid code te beperken]D;]A;- Directe query's om de itemgegevens op te halen]D;]A;- Combinatie van directe query's en het maken van URL's]D;]A;``` ]D;]A;]D;]A;### Informatie over werkitems of het maken van problemen]D;]A;Voor Azure DevOps kunt u gebruikmaken van het document ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) hierin staat informatie over het maken van een werkitem met een URL.]D;]A;]D;]A;Voor GitHub kunt u het document ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) gebruiken; hierin wordt informatie uitgelegd over het maken van een probleem.]D;]A;]D;]A;]D;]A;#### Vereiste parameters voor E2E-details]D;]A;]D;]A;`timestamp` - Vereist zodat de query's kunnen worden gefilterd tot de juiste periode van 10 minuten. Dit wordt doorgegeven door de UX wanneer u de sjabloon selecteert. Hiermee worden de parameters `starttime` en `endtime` gegenereerd die in de query's worden gebruikt]D;]A;`operationid` - Vereist zodat de query op de gerelateerde items kan worden gemaakt. Deze wordt doorgegeven door de UX wanneer u de sjabloon selecteert.]D;]A;`eventid` - Vereist zodat de specifieke itemquery kan worden gemaakt. Deze wordt doorgegeven door de UX wanneer u de sjabloon selecteert.]D;]A;`eventlink` - De koppeling die wordt doorgegeven aan het werkitem zodat u de details van de bewerking kunt zien. Deze wordt doorgegeven door de UX wanneer u de sjabloon selecteert.]D;]A;`httpendpoint` - Vereist om de URL te genereren om het werkitem te maken. Dit wordt doorgegeven door de wizard Maken.]D;]A;]D;]A;#### Vereiste parameters voor slimme detectie #### Optionele parameters]D;]A;]D;]A;`detectionId` - Vereist zodat we de detectiegebeurtenis kunnen identificeren.]D;]A;`detectionType` - Vereist detectietype.]D;]A;`ruleName` - Vereiste detectieregelnaam.]D;]A;`detectionDuration` - Vereist om de startDate te voorzien van een endDate.]D;]A;]D;]A;#### Optionele parameters]D;]A;]D;]A;`queryString` - Laat u meer velden toevoegen wanneer u een werkitem maakt. ]D;]A;]D;]A;#### Helpfuncties]D;]A;`returnundefined (name: string)` - gebruikt een reeks en retourneert <undefined> als deze leeg is]D;]A;`returnline (sleutel: reeks, waarde: reeks)` - Retourneert één opgemaakte regel die aan de details van het werkitem moet worden toegevoegd. Hiermee wordt een sleutel-/waardepaar gegenereerd waarbij de sleutel vetgedrukt wordt weergegeven.]D;]A;`urlPrefix (workItemType:string)` - Genereert de URL om de volledige URL voor het maken van werkitems te maken. Gebruikt het werkitemtype om het juiste eindpunt te maken. Voor DevOps moet het werkitemtype een geldige werkitemnaam zijn zoals 'bug', 'task', enzovoort.]D;]A;`description (witType:string, itemType:string)` - Hulpprogramma om het type werkitem en telemetrietype te identificeren, wordt alleen gebruikt in de query-uitvoer.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - Hiermee wordt het werkitem of de titel van het probleem gegenereerd en wordt het volgende gebruikt: witType om in de titel weer te geven of het een Bug, Task, enzovoort is, het itemType om te helpen identificeren of het een aanvraag, afhankelijkheid, enzovoort is en de naam van de bewerking om meer context te geven over welk specifieke item moet worden onderzocht]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - Hiermee wordt het werkitem of de hoofdtekst van het probleem gegenereerd en wordt het volgende gebruikt: bodyOfWit (dit is een tekenreeks zonder opmaak, zie de query voor voorbeelden), itemType, wat wordt gebruikt om een specifieke veldnaam voor AzureDevOps-werkitems te wijzigen (zie de opmerking).]D;]A;`appendquerystring (fieldToAppend:string)` - Hiermee wordt simpelweg een ampersand (&) aan de voorkant van een queryString-parameter toegevoegd.]D;]A;]D;]A;> **Opmerking over het werkitemtype Bug** In Azure DevOps wordt 'Repro Steps' gebruikt voor het werkitemtype Bug, dus als u deze functie wijzigt, worden uw werkitemdetails mogelijk niet weergegeven.]D;]A;]D;]A;> **Opmerking over hyperlinks** In Azure DevOps is het niet toegestaan om een klikbare hyperlink in een werkitem toe te voegen. U kunt hooguit de URL opgeven.]D;]A;]D;]A;#### Directe query's]D;]A;]D;]A;Deze hebben de volgende indeling:]D;]A;]D;]A;`<<anyname>>` - Een verplichte naam voor de combinatiequery]D;]A;`<<telemetrytable>>` - aanvragen, traceringen, enzovoort.]D;]A;`bodyOfWit` - De tekenreeks die u aan het werkitem of het probleem wilt toevoegen.]D;]A;`nameForTitle` - Wordt gebruikt om de juiste titel voor een specifiek telemetrietype te genereren. Voor bijvoorbeeld avalabilityResults is mogelijk niet operation_Name gedefinieerd.]D;]A;`workItemKey` - Dit is altijd 1 en wordt gebruikt om de juiste lijst met werkitemtypen automatisch te genereren (als u meerdere wilt) voor Azure DevOps. Zie hieronder in de sectie over combineren.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;]D;]A;#### Combinatie van directe query's]D;]A;]D;]A;Na het definiëren van de directe query's worden deze in één gecombineerde query samengevoegd om de juiste tabel te genereren. Voor Azure DevOps wordt één speciale bewerking uitgevoerd, namelijk het samenvoegen van de gecombineerde query met de aangepaste gegevenstabel workItemType. Hierin wordt simpelweg de rij herhaald zodat desgewenst meerdere werkitemtypen kunnen worden gemaakt.]D;]A;]D;]A;### Probleemoplossing]D;]A;]D;]A;### 404 Kan pagina niet vinden]D;]A;]D;]A;Dit geeft aan dat de naam van organisatie of de naam of dat het project onjuist is. Controleer de URL die u in de wizard hebt ingevoerd en probeer het opnieuw.]D;]A;]D;]A;### 403 Niet bevoegd]D;]A;]D;]A;Dit betekent dat u geen toegang tot de organisatie of het project hebt. Controleer of u de juiste URL hebt; als dat het geval is, neemt u contact met uw beheerder om toegang te krijgen.]D;]A;]D;]A;### Werkitemdetails worden afgekapt]D;]A;]D;]A;Dit kan twee oorzaken hebben, en er zijn maar een paar opties om dit op te lossen.]D;]A;]D;]A;**Gegevenslengte** - Voor de meeste webservers geldt een maximale URL-lengte. Als uw gegevens lang zijn of als er een beperking geldt voor de URL-lengte, ziet u mogelijk niet het einde van uw gegevens]D;]A;**URL-versleuteling** - Standaard worden de waarden die voor de functie `returnline` worden gebruikt, versleuteld. Maar als u dit verandert of als u iets aanpast, kunt u controleren of u het probleem met behulp van url_encode() kunt oplossen]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;// Required parameters]D;]A;// Optional parameters]D;]A;// Helper functions to keep code down]D;]A;// Direct queries to get the item information]D;]A;// Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.links9.content.links.bd27eb743c714af1b5f58155b4617a34.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create an issue for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.00f9cb584a754b75ab972fae4922c3de.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[gebruikt voor slimme detectie]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.b5eddb9668e447ac9e1aa7f720cac03f.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[gebruikt voor slimme detectie]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.d3aebff3d5c645969fb305c36869eab1.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[gebruikt voor slimme detectie]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.f6598f4ceba14fa48d6abce8c756d469.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[gebruikt voor slimme detectie]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.textdescription.content.json" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## Create a GitHub Work Item]D;]A;---]D;]A;]D;]A;Click below links to create work items. If you want to customize this view, go to the Work Items menu and select the template that was created when you first set up the work item configuration.]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[## Een GitHub-werkitem maken]D;]A;---]D;]A;]D;]A;Klik hieronder op koppelingen om werkitems te maken. Als u deze weergave wilt aanpassen, gaat u naar het menu Werkitems en selecteert u de sjabloon die is gemaakt toen u de configuratie van werkitems voor het eerst instelde.]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[# Create an GitHub Work Item]D;]A;---]D;]A;]D;]A;Using the table generated by the analytics query below we can create many types of work items. If you want to customize this view, go to the Work Items menu and select the workbook that was created when you first set up the work item configuration.]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.texteventTitle.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text" UsrLk="true">
          <Val><![CDATA[### Create Work Item for {eventName}]]></Val>
          <Prev Cat="Text">
            <Val><![CDATA[# Create Work Item for specific event]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
    </Item>
  </Item>
</LCX>