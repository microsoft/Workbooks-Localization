<?xml version="1.0" encoding="utf-8"?>
<LCX SchemaVersion="6.0" Name="S:\output\loc\WorkItems\Azure DevOps.resjson" PsrId="306" FileType="1" SrcCul="en-US" TgtCul="ru-RU" xmlns="http://schemas.microsoft.com/locstudio/2006/6/lcx">
  <OwnedComments>
    <Cmt Name="Dev" />
    <Cmt Name="LcxAdmin" />
    <Cmt Name="Rccx" />
  </OwnedComments>
  <Item ItemId=";String Table" ItemType="0" PsrId="306" Leaf="false">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
    <Item ItemId=";Strings" ItemType="0" PsrId="306" Leaf="false">
      <Disp Icon="Str" Disp="true" LocTbl="false" />
      <Item ItemId=";items.HiddenInfoPannel.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;- Required parameters for E2E details]D;]A;- Required parameters for Smart Detection]D;]A;- Optional parameters]D;]A;- Helper functions to keep code down]D;]A;- Direct queries to get the item information]D;]A;- Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters for E2E details]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Required parameters for Smart Detection]D;]A;]D;]A;`detectionId` - Required so we can identify the detection event.]D;]A;`detectionType` - Required detection type.]D;]A;`ruleName` - Required detection rule name.]D;]A;`detectionDuration` - Required to provide startDate with endDate.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;#### workItemTypes datatable ]D;]A;]D;]A;In order to give you the option to create a Bug for one type of telemetry and a task for another type we generate a data table that has a list of workItemTypes with a hard coded id of 1. We join with the hardcoded key so we can repeat the rows for each work item type and generate the correct URL with the correct parameters. You can see this in the query and it looks like this.]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Task', 1]5D;;]D;]A;```]D;]A;]D;]A;If you want to add another work item type or only have one you can modify the data table to reflect any built in or custom type.]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[## Как использовать этот шаблон]D;]A;]D;]A;Если отображается это сообщение, значит, вы изменяете шаблон для его настройки или отладки. Перейдите в нужный раздел, чтобы начать работу. Обратите внимание, что этот текст приводится для версий шаблона Azure DevOps и GitHub, так как в них используются одинаковые функции.]D;]A;]D;]A;### Настройка шаблона]D;]A;]D;]A;Ниже приведены два запроса. Первый запрос использует идентификатор "itemId" и передает его в запрос Log Analytics для получения конкретного элемента. Второй запрос использует "operation_Id" и отображает ВСЕ связанные данные телеметрии.]D;]A;]D;]A;Общая структура запроса имеет следующий вид: ]D;]A;```]D;]A;– Обязательные параметры для сведений E2E]D;]A;– Обязательные параметры для интеллектуального обнаружения]D;]A;– Необязательные параметры]D;]A;– Вспомогательные функции для сокращения объема кода]D;]A;– Прямые запросы для получения сведений об элементе]D;]A;– Объединение прямых запросов и создание URL-адресов]D;]A;```]D;]A;]D;]A;### Сведения о создании рабочего элемента или проблемы]D;]A;В Azure DevOps доступен документ ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/ru-ru/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink), содержащий сведения о создании рабочего элемента с помощью URL-адреса.]D;]A;]D;]A;В GitHub доступен документ ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) с подробным описанием процедуры создания проблемы.]D;]A;]D;]A;]D;]A;#### Обязательные параметры для сведений E2E]D;]A;]D;]A;"timestamp" — требуется для фильтрации запросов до нужного 10-минутного периода времени. Передается при выборе шаблона. Создает параметры "starttime" и "endtime", используемые в запросах.]D;]A;"operationid" — требуется для создания запроса связанных элементов. Передается при выборе шаблона.]D;]A;"eventid" — требуется для создания запроса конкретного элемента. Передается при выборе шаблона.]D;]A;"eventlink" — ссылка, добавляемая в рабочий элемент для просмотра сведений об операции. Передается при выборе шаблона.]D;]A;"httpendpoint" — требуется для генерирования URL-адреса для создания рабочего элемента. Передается мастером создания.]D;]A;]D;]A;#### Обязательные параметры для интеллектуального обнаружения]D;]A;]D;]A;"detectionId" — требуется для идентификации события обнаружения.]D;]A;"detectionType" — требуемый тип обнаружения.]D;]A;"ruleName" — требуемое имя правила обнаружения.]D;]A;"detectionDuration" — требуется для указания startDate и EndDate.]D;]A;]D;]A;#### Необязательные параметры]D;]A;]D;]A;"queryString" — позволяет добавлять дополнительные поля при создании рабочего элемента. ]D;]A;]D;]A;#### Вспомогательные функции]D;]A;"returnundefined (name: string)" — принимает строку и возвращает <undefined>, если он пуст.]D;]A;"returnline (key: string, value: string)" — возвращает одну отформатированную строку для добавления в сведения о рабочем элементе. При этом формируется пара "ключ-значение", в которой ключ выделен жирным шрифтом.]D;]A;"urlPrefix (workItemType:string)" — генерирует URL-адрес для создания полного URL-адреса создания рабочего элемента. Принимает тип рабочего элемента для создания правильной конечной точки. Для DevOps тип workItem должен быть допустимым именем рабочего элемента ("bug", "task" и т. д.).]D;]A;"description (witType:string, itemType:string)" — служебная программа для определения типа рабочего элемента и типа телеметрии. Применяется только в выходных данных запроса.]D;]A;"witTitle (witType:string, itemType:string, opName:string)" — создает название рабочего элемента или проблемы и использует "witType", чтобы указать в заголовке, что это ошибка, задача и т. д., "itemType ", чтобы определить, что это запрос, зависимость и т. д., и имя операции, чтобы предоставить контекст о том, какой конкретный элемент необходимо исследовать.]D;]A;"witDescription (bodyOfWit: string, itemType:string)" — создает текст рабочего элемента или проблемы и использует "bodyOfWit" — текстовую строку (см. запрос для примера), "itemType", который используется для изменения имени конкретного поля для рабочих элементов AzureDevOps (см. примечание).]D;]A;"appendquerystring (fieldToAppend:string)" — просто добавляет амперсанд (&) перед параметром "querystring".]D;]A;]D;]A;> **Примечание о типах рабочих элементов "Ошибка"** Azure DevOps использует шаги воспроизведения для типа рабочего элемента" Ошибка ", поэтому при изменении этой функции сведения о рабочих элементах могут не отображаться.]D;]A;]D;]A;> **Примечание о гиперссылках** Azure DevOps не позволит вставить активную гиперссылку в рабочий элемент. Вместо этого рекомендуется указать URL-адрес.]D;]A;]D;]A;#### Прямые запросы]D;]A;]D;]A;Прямые запросы имеют следующий формат:]D;]A;]D;]A;"<<anyname>>" — произвольное имя для запроса на объединение.]D;]A;"<<telemetrytable>>" — запросы, трассировки и т. д.]D;]A;"bodyOfWit" — строка, которая добавляется к рабочему элементу или проблеме.]D;]A;"nameForTitle" — используется для создания правильного названия для конкретного типа телеметрии. Например, для "avalabilityResults" может быть не определен параметр "operation_Name".]D;]A;"workItemKey" — всегда имеет значение "1" и используется для автоматического создания правильного списка типов рабочих элементов (если их требуется несколько) для Azure DevOps. См. ниже в разделе об объединении.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;#### Таблица данных workItemTypes ]D;]A;]D;]A;Чтобы можно было создать тип "Ошибка" в качестве одного типа телеметрии и тип "Задача" в качестве другого типа, создается таблица данных со списком workItemTypes с жестко заданным идентификатором, равным "1". С помощью жестко заданного ключа выполняется объединение, чтобы можно было повторять строки для каждого типа рабочего элемента и создать правильный URL-адрес с правильными параметрами. Это можно увидеть в запросе, который выглядит следующим образом:]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Task', 1]5D;;]D;]A;```]D;]A;]D;]A;Для добавления другого типа рабочего элемента или использования только одного можно изменить таблицу данных так, чтобы она отражала любой встроенный или пользовательский тип.]D;]A;]D;]A;#### Объединение прямых запросов]D;]A;]D;]A;После определения прямых запросов их можно объединить в единый запрос для создания правильной таблицы. Для Azure DevOps следует выполнить одно особое действие, а именно: объединить необъединенный запрос с пользовательской таблицей данных с именем workItemType. Это просто повторит строку, чтобы при необходимости можно было создать несколько типов рабочих элементов.]D;]A;]D;]A;### Устранение неполадок]D;]A;]D;]A;#### 404 — страница не найдена]D;]A;]D;]A;Это означает, что указано неправильное имя организации или название проекта. Проверьте введенный URL-адрес в мастере и повторите попытку.]D;]A;]D;]A;#### 403 — несанкционированный доступ]D;]A;]D;]A;Это означает, что у вас нет доступа к организации или проекту. Проверьте правильность URL-адреса и обратитесь к администратору, чтобы получить доступ.]D;]A;]D;]A;#### Данные о рабочих элементах усекаются]D;]A;]D;]A;На это есть две причины, которые можно устранить, указав правильные значения параметров.]D;]A;]D;]A;**Длина данных** — для большинства веб-серверов существует максимальная длина URL-адреса. При наличии данных большой длины или ограничения на длину URL-адреса конец данных может быть не виден.]D;]A;**Кодировка URL-адреса** — по умолчанию значения, передаваемые в фукнцию "returnline", кодируются с помощью URL-адреса. Но при изменении этого параметра или при выполнении каких-либо настроек необходимо проверить, решается ли проблема с помощью url_encode().]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[## How to use this template]D;]A;]D;]A;If you're seeing this message this means you're editing your template to customize it or debug it. Please navigate to the correct section to get started. Please note this text is shared between both the Azure DevOps and GitHub versions of the template as they share the same features.]D;]A;]D;]A;### Customize the Template]D;]A;]D;]A;Below there are two queries. The first query takes in the itemId and passes it to the Log Analytics query to get the specific item. The second query takes in the operation_Id and will show ALL related telemetry.]D;]A;]D;]A;The general structure of the query is ]D;]A;```]D;]A;// Required parameters]D;]A;// Optional parameters]D;]A;// Helper functions to keep code down]D;]A;// Direct queries to get the item information]D;]A;// Union of direct queries and URL creation]D;]A;```]D;]A;]D;]A;### Infomation about Work Item or Issue creation]D;]A;For Azure DevOps there is the ["Define an ad hoc work item template using a hyperlink"]5D;(https://docs.microsoft.com/en-us/azure/devops/boards/backlogs/work-item-template?view=azure-devops&tabs=browser#define-an-ad-hoc-work-item-template-using-a-hyperlink) document which gives some details on how to create a work item with a URL.]D;]A;]D;]A;For GitHub there is the ["About automation for issues and pull requests with query parameters"]5D;(https://docs.github.com/en/free-pro-team@latest/github/managing-your-work-on-github/about-automation-for-issues-and-pull-requests-with-query-parameters) document which explains the details of creating an issue.]D;]A;]D;]A;]D;]A;#### Required parameters]D;]A;]D;]A;`timestamp` - Required so we can filter the queries down to the correct 10 minutes window. This is passed in by the UX when you select the template. Generates the `starttime` and `endtime` parameters used in the queries]D;]A;`operationid` - Required so we can create the related items query. This is passed in by the UX when you select the template.]D;]A;`eventid` - Required so we can create the specific item query. This is passed in by the UX when you select the template.]D;]A;`eventlink` - The link that is added to the work item so you can see the details of the operation. This is passed in by the UX when you select the template.]D;]A;`httpendpoint` - Required to generate the URL to create the work item. This is passed in by the create wizard.]D;]A;]D;]A;#### Optional parameters]D;]A;]D;]A;`queryString` - allow to add more fields when create a work item. ]D;]A;]D;]A;#### Helper functions]D;]A;`returnundefined (name: string)` - Takes in a string and returns. <undefined> if it's empty]D;]A;`returnline (key: string, value: string)` - Returns a single formated line to be added to the details of the work item. This will generate a key/value pair where the key is bolded.]D;]A;`urlPrefix (workItemType:string)` - Generates the URL to create the full work item creation URL. Takes in the work item type to create the correct endpoint. For DevOps the workItem type must be a valid work item name "bug", "task", etc.]D;]A;`description (witType:string, itemType:string)` - Utility to identify what type of work item and what type of telemetry type, only used in the query output.]D;]A;`witTitle (witType:string, itemType:string, opName:string)` - This generates the work item or issue title and takes in the folloing: witType to state in the title if it's a Bug, Task, etc., the itemType to help idenitfy if it's a request, dependency, etc., and the operation name to give context about what specific item needs to be investigated]D;]A;`witDescription (bodyOfWit: string, itemType:string)` - This generate the work item or issue body and take in the following: bodyOfWit which is a plaintext string, see the query for examples, itemType, which is used to change a specific field name for AzureDevOps work items see the note.]D;]A;`appendquerystring (fieldToAppend:string)` - Simply appends an ampersand (&) to the front of a querystring parameter.]D;]A;]D;]A;> **Note about Bug Work Item Types** Azure DevOps uses "Repro Steps" for the Bug work item type, so if you change this function your work item details may not show up.]D;]A;]D;]A;> **Note about hyperlinks** Azure DevOps will not allow you to inject a clickable hyperlink in a work item. The best we can do is provide the URL.]D;]A;]D;]A;#### Direct queries]D;]A;]D;]A;These have the following format:]D;]A;]D;]A;`<<anyname>>` - An arbitrary name for the union query]D;]A;`<<telemetrytable>>` - requests, traces, etc.]D;]A;`bodyOfWit` - The string you want to be added to the work item or issue.]D;]A;`nameForTitle` - Used to generate the correct title for a specific telemetry type. For example, avalabilityResults may not have an operation_Name defined.]D;]A;`workItemKey` - This is always 1 and is used to automatically generate the correct list of work item types (if you want multiple) for Azure DevOps. See below in the union section.]D;]A;]D;]A;```]D;]A;let <<anyname>> = <<telemetrytable>> | where timestamp between(starttime..endtime) | where itemId == itemIdFromWorkbook]D;]A;| extend bodyOfWit = strcat(returnline("Operation Name", operation_Name), returnline("Timestamp", timestamp), returnline("Duration (ms)", duration), returnline("Country or region", client_CountryOrRegion), returnline("State or province", client_StateOrProvince), returnline("City", client_City), returnline("Link", urlToDetails))]D;]A;| extend nameForTitle = name]D;]A;| extend workItemKey = 1;]D;]A;]D;]A;```]D;]A;#### workItemTypes datatable ]D;]A;]D;]A;In order to give you the option to create a Bug for one type of telemetry and a task for another type we generate a data table that has a list of workItemTypes with a hard coded id of 1. We join with the hardcoded key so we can repeat the rows for each work item type and generate the correct URL with the correct parameters. You can see this in the query and it looks like this.]D;]A;]D;]A;```]D;]A;let workItemTypes = datatable ( workItemType: string, workItemKey: long )['Bug', 1, 'Task', 1]5D;;]D;]A;```]D;]A;]D;]A;If you want to add another work item type or only have one you can modify the data table to reflect any built in or custom type.]D;]A;]D;]A;#### Union of direct queries]D;]A;]D;]A;After the direct queries are defined we combine them into one unified query to generate the correct table. For Azure DevOps we do one special thing here and that is join the uninoned query with a custom datatable called workItemType. This simply repeat the row so we can create multiple work item types if desired.]D;]A;]D;]A;### Troubleshooting]D;]A;]D;]A;#### 404 Page Not Found]D;]A;]D;]A;This indicates that either the organization name is incorrect or the project is incorrect. Check the URL you entered into the wizard and try again.]D;]A;]D;]A;#### 403 Unauthorized]D;]A;]D;]A;This means that you do not have access to the organization or the project. Please validate you have the correct URL and if so contact your administrator to get access.]D;]A;]D;]A;#### Work Item Data is truncated]D;]A;]D;]A;There are two reasons for this and you only have a few options to correct them.]D;]A;]D;]A;**Data Length** - For most web servers there is a max URL length. If your data is particularly long or if there is a URL length restriction you may not see the end of your data]D;]A;**URL Encoding** - By default we URL encode the values going into the `returnline` function. But if you alter this or if you are doing something custom you should check to see if using url_encode() fixes the issue]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.linkscreation.content.links.7aa6fc59a42640c2b25d0734201555ad.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create a task  for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.linkscreation.content.links.8fba3aab86974f2c9b650405c648af41.linkLabel" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Create a bug for this {itemType}]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.00f9cb584a754b75ab972fae4922c3de.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[используется для интеллектуального обнаружения]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.b5eddb9668e447ac9e1aa7f720cac03f.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[используется для интеллектуального обнаружения]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.d3aebff3d5c645969fb305c36869eab1.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[используется для интеллектуального обнаружения]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.parametersTopLevel.content.parameters.f6598f4ceba14fa48d6abce8c756d469.description" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[used for smart detection]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[используется для интеллектуального обнаружения]]></Val>
          </Tgt>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.textdescription.content.json" ItemType="0" PsrId="306" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[## Create an Azure Dev Ops Work Item]D;]A;---]D;]A;]D;]A;Click below links to create work items. If you want to customize this view, go to the Work Items menu and select the template that was created when you first set up the work item configuration.]]></Val>
          <Tgt Cat="Text" Stat="Loc" Orig="New">
            <Val><![CDATA[## Создание рабочего элемента Azure Dev Ops]D;]A;---]D;]A;]D;]A;Чтобы создать рабочие элементы, щелкните ссылки ниже. Чтобы настроить это представление, перейдите в меню "Рабочие элементы" и выберите шаблон, созданный при первой настройке параметров рабочего элемента.]]></Val>
          </Tgt>
          <Prev Cat="Text">
            <Val><![CDATA[# Create an Azure Dev Ops Work Item]D;]A;---]D;]A;]D;]A;Using the table generated by the analytics query below we can create many types of work items. If you want to customize this view, go to the Work Items menu and select the workbook that was created when you first set up the work item configuration.]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";items.texteventTitle.content.json" ItemType="0" PsrId="306" InstFlg="true" Leaf="true">
        <Str Cat="Text" UsrLk="true">
          <Val><![CDATA[### Create Work Item for {eventName}]D;]A;]]></Val>
          <Prev Cat="Text">
            <Val><![CDATA[# Create Work Item for specific event]]></Val>
          </Prev>
        </Str>
        <Disp Icon="Str" />
      </Item>
    </Item>
  </Item>
</LCX>